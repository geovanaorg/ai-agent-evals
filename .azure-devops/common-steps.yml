steps:
- task: UseNode@1
  displayName: Install Node
  inputs:
    versionSpec: "20.x"

- task: npmAuthenticate@0
  inputs:
    workingFile: .azure-devops/.npmrc

- script: |
    npm install -g tfx-cli
  displayName: Install TFX CLI

- task: PowerShell@2
  inputs:
    filePath: '$(Build.SourcesDirectory)/scripts/setup.ps1'
    pwsh: false
  displayName: 'Run setup script'

- task: PowerShell@2
  displayName: Create VSIX
  inputs:
    targetType: 'inline'
    workingDirectory: '$(Build.SourcesDirectory)/dist/prod'
    script: |
      tfx extension create --manifest-globs vss-extension.json

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@5
  inputs:
    ConnectedServiceName: 'esrp-codesign-service-connection'
    UseMSIAuthentication: true
    AppRegistrationClientId: '05ac92aa-1bc7-4799-b019-5716dd107c21'
    AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
    EsrpClientId: '05ac92aa-1bc7-4799-b019-5716dd107c21'
    AuthAKVName: 'az-exp-common-certs'
    AuthCertName: 'esrp-authentication-certificate'
    AuthSignCertName: 'esrp-request-signing-certificate'
    FolderPath: '$(Build.SourcesDirectory)/dist/prod'
    Pattern: '*.vsix'
    signConfigType: inlineSignParams
    inlineOperation: |
      [
        {
          "keyCode": "CP-230072",
          "operationSetCode": "VSCodePublisherSign",
          "parameters" : [],
          "toolName": "sign",
          "toolVersion": "1.0"
        }
      ]
    SessionTimeout: 90
    MaxConcurrency: 25
    MaxRetryAttempts: 5
    PendingAnalysisWaitTimeoutMinutes: 5
  displayName: Sign Extension
  #condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))

